<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="469" />
    <option name="newTranslationDialogY" value="510" />
    <histories>
      <item value="Add the content to a &lt;div&gt; so that we can get its inner HTML" />
      <item value="Make sure attach is non-empty, since empty nodes will not get copied." />
      <item value="attach" />
      <item value="Create a fake selection so that we can add a Base64-encoded copy of the" />
      <item value="Resolve a Slate range from the DOM range." />
      <item value="Else resolve a range from the caret position where the drop occured." />
      <item value="Get the target range from a DOM `event`." />
      <item value="there is no way to create a reverse DOM Range using Range.setStartsetEnd" />
      <item value="Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit." />
      <item value="the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit." />
      <item value="Find the native DOM element from a Slate node." />
      <item value="Sets data from the currently selected fragment on a `DataTransfer`." />
      <item value="Insert data from a `DataTransfer` into the editor." />
      <item value="n Firefox, reading `target.nodeType` will throw an error if target is originating from an internal &quot;restricted&quot; element (e.g. a stepper arrow on a number input). (20180504)" />
      <item value="COMPAT" />
      <item value="Check if a DOM node is within the editor." />
      <item value="deselect" />
      <item value="Blur the editor." />
      <item value="Check if the editor is focused." />
      <item value="Find a key for a Slate node." />
      <item value="A React and DOM-specific version of the `Editor` interface." />
      <item value="A React and DOM-specific version of the `Editor` interface. React 和 DOM 特定版的" />
      <item value="`withReact` adds React and DOM specific behaviors to the editor." />
      <item value="Constants for string distance checking." />
      <item value="Render text inside void nodes with a zero-width space. So the node can contain selection but the text is not visible." />
      <item value="Returns the host window of a DOM node" />
      <item value="Trailing" />
      <item value="Leaf strings with text in them." />
      <item value="Leaf strings without text, render as zero-width strings." />
      <item value="Leaf content strings." />
      <item value="COMPAT: This is required to prevent TypeScript aliases from doing some very weird things for Slate's types with the same name as globals. (20191127) https:github.commicrosoftTypeScriptissues35002" />
      <item value="Get the point after a location." />
      <item value="lowest" />
      <item value="Get the ancestor above a location in the document." />
      <item value="Overrideable core actions." />
      <item value="Schema-specific node behaviors." />
      <item value="Get the concatenated text string of a node's content." />
      <item value="By default the order is top-down, from lowest to highest node in the tree, but you can pass the `reverse: true` option to go bottom-up." />
      <item value="Return a generator of the in a branch of the tree, from a specific path." />
      <item value="Get the descendant node referred to by a specific path. If the path is an empty array, it refers to the root node itself." />
      <item value="Get the sliced fragment represented by a range inside a root node." />
      <item value="Get the node at a specific path, asserting that it's an ancestor node." />
      <item value="Convenience type for returning the props of a node." />
      <item value="Descendant" />
      <item value="Check if an element matches set of properties." />
      <item value="Check if a set of props is a partial of Element." />
      <item value="Check if a value is an array of `Element` objects." />
      <item value="Check if a value implements the 'Ancestor' interface." />
      <item value="Ancestor" />
      <item value="is Ancestor" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="172" />
        <entry key="ENGLISH" value="173" />
        <entry key="FRENCH" value="2" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1614578584643" />
  </component>
</application>