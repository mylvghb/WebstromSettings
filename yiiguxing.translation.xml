<application>
  <component name="AppStorage">
    <histories>
      <item value="Map to retrieve a value from." />
      <item value="Safely return a value from a map." />
      <item value="Depending on the flag, returns either $keys or $values or both." />
      <item value="Map to pull a value from." />
      <item value="The value found in the map." />
      <item value="Keys to use when looking for a value." />
      <item value="Border component to extract." />
      <item value="Border value to find a value in." />
      <item value="Given border $val, find a specific element of the border, which is $elem. The possible values for $elem are width, style, and color." />
      <item value="no matter how many values were passed in. Use this function if you need to know the specific side of a value, but don't know if the value is using a shorthand format." />
      <item value="no matter how many values were passed in." />
      <item value="Determine" />
      <item value="A single value based on `$val` and `$side`." />
      <item value="Side to return. Should be `top`, `right`, `bottom`, or `left`." />
      <item value="Value to analyze. Should be a shorthand sizing property" />
      <item value="shorthand sizing property" />
      <item value="Value to analyze. Should be a shorthand sizing property, e.g. &quot;1em 2em 1em&quot;" />
      <item value="Determine a top/right/bottom/right value on a padding, margin, etc. property, no matter how many values were passed in. Use this function if you need to know the specific side of a value, but don't know if the value is using a shorthand format." />
      <item value="Determine if a value is not falsey, in CSS terms. Falsey values are `null`, `none`, `0` with any unit, or an empty list." />
      <item value="assume that line-heights greater than 10 are meant to be absolute in 'px'" />
      <item value="The font size to use to work out the line height - defaults to $global-font-size" />
      <item value="Value to convert to a unitless line height" />
      <item value="working out" />
      <item value="Converts a pixel, percentage, rem or em value to a unitless value based on a given font size. Ideal for working out unitless line heights." />
      <item value="Turn 0rem into 0" />
      <item value="Calculate rem if units for $value is not rem or em" />
      <item value="Transform em into rem if someone hands over 'em's" />
      <item value="inspect" />
      <item value="Return a string containing the value as its Sass representation." />
      <item value="A number in rems, calculated based on the given value and the base pixel value. rem values are passed through as is." />
      <item value="Base for pixel conversion." />
      <item value="Pixel value to convert." />
      <item value="By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable." />
      <item value="*Any* value passed, regardless of unit, is assumed to be a pixel value." />
      <item value="regardless of unit" />
      <item value="*Any* value passed," />
      <item value="*Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the `$global-font-size` variable." />
      <item value="Converts a unitless, pixel, or rem value to em, for use in breakpoints." />
      <item value="Using rem as base allows correct scaling" />
      <item value="This is because 100% font size = 16px in most all browsers" />
      <item value="If the base font size is a %, then multiply it by 16px" />
      <item value="defer" />
      <item value="The base value to use when calculating the `rem`. If you're using Foundation out of the box, this is 16px. If this parameter is `null`, the function will reference the `$global-font-size` variable as the base." />
      <item value="One or more values to convert. Be sure to separate them with spaces and not commas. If you need to convert a comma-separated list, wrap the list in parentheses." />
      <item value="Converts one or more pixel values into matching rem values." />
      <item value="The same number, sans unit." />
      <item value="Removes the unit (e.g. px, em, rem) from a value, returning the number only." />
      <item value="denominator" />
      <item value="Rounds a number down to the previous whole number." />
      <item value="Handles decimal exponents by trying to convert them into a fraction and then use a nth-root-algorithm for parts of the calculation" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="129" />
        <entry key="ENGLISH" value="130" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
      </map>
    </option>
  </component>
</application>