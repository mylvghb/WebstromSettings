<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="598" />
    <option name="newTranslationDialogX" value="469" />
    <option name="newTranslationDialogY" value="510" />
    <histories>
      <item value="Base Scaffolding Variables" />
      <item value="Scale" />
      <item value="set the replace: true so the navigation will not leave a history record" />
      <item value="Set" />
      <item value="explicit-module-boundary-types" />
      <item value="Partial" />
      <item value="Experimental" />
      <item value="dashboard" />
      <item value="hack router push callback" />
      <item value="mutations" />
      <item value="Print trailing commas wherever possible when multi-line." />
      <item value="Print semicolons." />
      <item value="Add a custom property to the leaf text nodes in the current selection." />
      <item value="Huge" />
      <item value="descendant" />
      <item value="SHORTCUTS" />
      <item value="Universal defers to ensure that the match occurs in every branch, so we" />
      <item value="universal" />
      <item value="Prevent the default outline styles." />
      <item value="The Grammarly Chrome extension works by changing the DOM out from under `contenteditable` elements, which leads to weird behaviors so we have to disable it like editor. (20170424)" />
      <item value="The `beforeinput` event isn't recognized." />
      <item value="recognized" />
      <item value="Yank" />
      <item value="Check if an event is overrided by a handler." />
      <item value="Check if the target is inside void and in the editor." />
      <item value="Check if the target is editable and in the editor." />
      <item value="doesn't do anything on a div, so it needs to be manually focused." />
      <item value="Otherwise the DOM selection is out of sync, so update it." />
      <item value="If the DOM selection is in the editor and the editor selection is already correct, we're done." />
      <item value="verify that the dom selection is in the editor" />
      <item value="If the DOM selection is properly unset, we're done." />
      <item value="Whenever the editor updates, make sure the DOM selection state is in sync." />
      <item value="Update element-related weak maps with the DOM element ref." />
      <item value="Keep track of some state for the event handler logic." />
      <item value="Update internal state on each render." />
      <item value="A wrapper around the provider to handle `onChange` events, because the editor is a mutable singleton so it won't ever register as &quot;changed&quot; otherwise." />
      <item value="Get the current `selected` state of an element." />
      <item value="A React context for sharing the `readOnly` state of the editor." />
      <item value="A React context for sharing the `focused` state of the editor." />
      <item value="Use useSlateStatic instead." />
      <item value="A React context for sharing the editor object, in a way that re-renders the context whenever changes occur." />
      <item value="The \`useSlate\` hook must be used inside the &lt;SlateProvider&gt; component's context." />
      <item value="Get the current editor object from the React context." />
      <item value="A React context for sharing the editor object." />
      <item value="A default memoized decorate function." />
      <item value="memoized" />
      <item value="Prevent warning on SSR by falling back to useEffect when window is not defined" />
      <item value="If it's a void node, wrap the children in extra void-specific elements." />
      <item value="Check if a list of ranges is equal to another." />
      <item value="decorate" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="240" />
        <entry key="ENGLISH" value="241" />
        <entry key="FRENCH" value="2" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1618539350126" />
  </component>
</application>