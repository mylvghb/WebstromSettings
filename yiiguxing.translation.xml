<application>
  <component name="AppStorage">
    <histories>
      <item value="## Drilldown Menu &lt;div class=&quot;docs-codepen-container&quot; data-ks-codepen&gt; &lt;a class=&quot;codepen-logo-link&quot; href=&quot;https://codepen.io/IamManchanda/pen/mmLrZz?editors=1000&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;{{root}}assets/img/logos/edit-in-browser.svg&quot; class=&quot;&quot; height=&quot;&quot; width=&quot;&quot; alt=&quot;edit on codepen button&quot;&gt;&lt;/a&gt; &lt;/div&gt; ```html_example &lt;ul class=&quot;vertical menu&quot; data-drilldown style=&quot;width: 200px&quot; id=&quot;m1&quot;&gt; &lt;li&gt; &lt;a href=&quot;#0&quot;&gt;Item 1&lt;/a&gt; &lt;ul class=&quot;vertical menu&quot; id=&quot;m2&quot;&gt; &lt;li&gt; &lt;a href=&quot;#0&quot;&gt;Item 1A&lt;/a&gt; &lt;ul class=&quot;vertical menu&quot; id=&quot;m3&quot;&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1Aa&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1Ba&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1Ca&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1Da&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1Ea&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1C&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1D&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 1E&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#0&quot;&gt;Item 2&lt;/a&gt; &lt;ul class=&quot;vertical menu&quot;&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 2A&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 2B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 2C&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 2D&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 2E&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;#0&quot;&gt;Item 3&lt;/a&gt; &lt;ul class=&quot;vertical menu&quot;&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 3A&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 3B&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 3C&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 3D&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#0&quot;&gt;Item 3E&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href='#0'&gt; Item 4&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; ``` ---" />
      <item value="WAVE Chrome" />
      <item value="NVDA screen reader for Windows - Free" />
      <item value="JAWS screen reader for Windows" />
      <item value="WAVE" />
      <item value="ChromeVox screen reader plugin for Chrome" />
      <item value="Color Contrast Checker" />
      <item value="free accessibility checker" />
      <item value="accessibility checker" />
      <item value="Accessibility Checklist" />
      <item value="certification and training" />
      <item value="Section 508 government requirements" />
      <item value="Introduction to Accessibility" />
      <item value="If you're using the Sass version of Foundation, you can use this mixin to enable the feature on your own components:" />
      <item value="Foundation's CSS makes use of the library [what-input](https://github.com/ten1seven/what-input), which can detect the user's current input device and adjust CSS accordingly. We use it to disable outlines for mouse users, but not keyboard users, who need the outline to know what element on the page has focus." />
      <item value="All of Foundation's components are keyboard-accessible and screen reader-friendly. All of our code examples include the required accessibility hooks, but there may be instances where you, as the developer, need to fine-tune the specifics of how those hooks are used. Our JavaScript plugins will automatically add many required attributes to the HTML for you. Refer to each component's documentation to learn how to ensure your markup is screen reader-friendly." />
      <item value="Foundation and Accessibility" />
      <item value="If your site has video, provide captions so that users who are deaf or hard-of-hearing can properly view the content." />
      <item value="Auditory" />
      <item value="More complex components like menus, tabs, or sliders can also typically be used with arrow keys, not just the &lt;kbd&gt;tab&lt;/kbd&gt; keys. All of our JavaScript plugins provide advanced keyboard support by default." />
      <item value="When using only the keyboard, the &lt;kbd&gt;tab&lt;/kbd&gt; key is the primary way to navigate through a page. However, most screen readers include many shortcut keys to skip around a page. For example, a screen reader can read every heading on a page, or every link, making it easier to find the right content on the page." />
      <item value="When using only the keyboard, the" />
      <item value="Users with motor disabilities may have trouble using a mouse, or don't use a mouse at all. For this reason, it's very important that your site is fully keyboard-accessible. Visually-impaired users also typically navigate websites using only their keyboard." />
      <item value="Motor" />
      <item value="Screen readers read the content of a web page out loud, or write it out as Braille, using certain cues from the HTML to infer meaning." />
      <item value="Blind users consume the web by reading it using a" />
      <item value="screen reader" />
      <item value="Visually-impaired users may have low vision or be completely blind. For low vision users, proper typographic contrast is important, both size and color. Foreground colors should stand out from background colors. You can use tools to calculate the contrast ratio of your foreground and background colors. The contrast ratio should at least be 1:4.5 for normal text and 3:1 for large text." />
      <item value="Visual" />
      <item value="Types of Disabilities" />
      <item value="Make everything usable on a keyboard and mouse." />
      <item value="Lucky for you, all of our components work with keyboards, mice, and touch screens out of the box." />
      <item value="Don't rely on purely visual cues." />
      <item value="The content of a page should make sense even if page is being read to the user, or if the user is colorblind and can't make use of color-based labeling." />
      <item value="Label everything." />
      <item value="Use the `alt` attribute on all images to describe what they are." />
      <item value="to hide labels visually while maintaining accessibility." />
      <item value="visibility classes" />
      <item value="If a control or form element has no text label, add one. You can use the" />
      <item value="Structure your document properly." />
      <item value="Use the right HTML tags for the job when marking up navigation, lists, links, controls, and so on." />
      <item value="Basic Principles" />
      <item value="conversation on GitHub" />
      <item value="Care about accessibility or want to contribute? Submit a Pull Request or get into the" />
      <item value="In addition to the accessibility features built into Foundation's components, be sure to follow best practices for making your site more accessible." />
      <item value="Here are some general guidelines to keep in mind as you make your pages accessible." />
      <item value="Foundation for Sites is a fully-accessible framework." />
      <item value="Our plugins use a number of handy ECMAScript 5 features that aren't supported in IE8." />
      <item value="Because the framework is written mobile-first, browsers that don't support media queries will display the mobile styles of the site." />
      <item value="gutters" />
    </histories>
  </component>
</application>