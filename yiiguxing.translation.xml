<application>
  <component name="AppStorage">
    <histories>
      <item value="Paths to JavaScript entry points for webpack to bundle modules" />
      <item value="Paths to Sass libraries, which can then be loaded with @import" />
      <item value="Paths to static assets that aren't images, CSS, or JavaScript" />
      <item value="Gulp will reference these paths when it copies files" />
      <item value="will use these settings" />
      <item value="will make sure your CSS works with these browsers" />
      <item value="Your project's server will run on localhost:xxxx at this port" />
      <item value="Watch for changes to static assets, pages, Sass, and JavaScript" />
      <item value="In production, the file is minified" />
      <item value="Combine JavaScript into one file" />
      <item value="Uncomment to remove unused styles in production" />
      <item value="In production, the CSS is compressed" />
      <item value="Generate a style guide from the Markdown content and HTML template in styleguide/" />
      <item value="oad updated HTML templates and partials into Panini" />
      <item value="Copy page templates into finished HTML files" />
      <item value="This task skips over the &quot;img&quot;, &quot;js&quot;, and &quot;scss&quot; folders, which are parsed separately" />
      <item value="which are parsed separately" />
      <item value="Copy files out of the assets folder" />
      <item value="This happens every time a build starts" />
      <item value="Delete the &quot;dist&quot; folder" />
      <item value="Sass must be run later so UnCSS can search for used classes in the others assets." />
      <item value="Build the &quot;dist&quot; folder by running all of the below tasks" />
      <item value="If you want to pick and choose which modules to include, comment out the above and uncomment" />
      <item value="parallel" />
      <item value="series" />
      <item value="// Build the &quot;dist&quot; folder by running all of the below tasks&#10;// Sass must be run later so UnCSS can search for used classes in the others assets." />
      <item value="success" />
      <item value="prevent" />
      <item value="Extended by Panel component:" />
      <item value="Event will be fired on current route change" />
      <item value="event will be triggered right before swipe back animation to previous page when you release it" />
      <item value="Event will be triggered right before swipe back animation to previous page when you release it" />
      <item value="Event will be triggered during swipe back move" />
      <item value="Router will fire the following DOM events for swipe back pages:" />
      <item value="Router has a lot of useful events." />
      <item value="will load &quot;some-page&quot; to main view" />
      <item value="previous pages history will be cleared after reloading/navigate to the specified route" />
      <item value="load new page and remove all previous pages from history and DOM" />
      <item value="replace the previous page in history with the new one from route" />
      <item value="replace the current page with the new one from route" />
      <item value="object with matching route from available routes" />
      <item value="Object with router initialization parameters" />
      <item value="Event will be triggered on view initialization" />
      <item value="View's initialized router instance" />
      <item value="Enable/disable opacity animation during swipe back action. You can disable it to improve performance. For iOS theme" />
      <item value="When enabled will extract dynamic navbar HTML element from page element and put it as a child of Views element. It improves dynamic navbar transition appearance, but in case you need dynamic navbar to be always as a page's child, then disable this parameter" />
      <item value="Enables dynamic navbar for iOS theme" />
      <item value="Scrollable page content" />
      <item value="Awesome" />
      <item value="Your main view, should have &quot;view-main&quot; class" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="112" />
        <entry key="ENGLISH" value="113" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="DUTCH" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="INDONESIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
  </component>
</application>