<application>
  <component name="AppStorage">
    <histories>
      <item value="教程" />
      <item value="Tutorials" />
      <item value="via" />
      <item value="All about the ZURB Template" />
      <item value="Overview of Foundation's ZURB Stack and File Structure" />
      <item value="Does" />
      <item value="What the ZURB Stack Does" />
      <item value="Style Sherpa has a dedicated page here in the docs that explains its various features. **[Learn more about Style Sherpa.](style-sherpa.html)**" />
      <item value="Under `src/styleguide` are two files to create a style guide for your project. The style guide is generated using Style Sherpa, a small plugin created by ZURB." />
      <item value="Creation" />
      <item value="Style Guide Creation" />
      <item value="The template creates a [BrowserSync](http://www.browsersync.io/) server, which is at `http://localhost:8000`. Load this URL to see your compiled templates. While the server is running, any time you save a file, any pages you have open will automatically refresh, allowing you to see changes in real-time as you work." />
      <item value="Browser Sync" />
      <item value="By default, all images are copied as-is from `assets/img` to your `dist` folder. When building for production, images are run through [gulp-imagemin](https://github.com/sindresorhus/gulp-imagemin) for compression. The plugin supports JPEG, PNG, SVG, and GIF files." />
      <item value="Compression" />
      <item value="Beginner’s guide to webpack" />
      <item value="What are ES6 imports" />
      <item value="it manages all assets and dependencies for you and compiles them into one single file. If you're unfamiliar with imports or module bundling, check out:" />
      <item value="The whole bundling process is handled by" />
      <item value="A source map is created that maps back to the original files. By default, the bundled `app.js` is uncompressed. When building for production, the file is run through [UglifyJS](https://github.com/mishoo/UglifyJS) for compression." />
      <item value="You can import there installed packages and custom files, they will be included in the build." />
      <item value="he main Js file is under" />
      <item value="JavaScript is transpiled using" />
      <item value="The CSS is output in the `nested` style, which is readable like normal CSS. A source map is also created, which can be read by developer tools such as the Chrome Web Inspector. When building for production, the CSS is also compressed with [clean-css](https://github.com/jakubpawlowicz/clean-css/issues), and pruned with [UnCSS](https://github.com/giakki/uncss). UnCSS scans the HTML of your pages and removes any CSS classes you didn't use." />
      <item value="nested" />
      <item value="Any new Sass partials you create should be in this folder as well." />
      <item value="The main Sass file is under" />
      <item value="Learn more about Panini." />
      <item value="Panini has a dedicated page here in the docs that explains its various features." />
      <item value="This is done with a templating language called" />
      <item value="is used to process your project's various pages, inserting them into a common template, and injecting any HTML partials." />
      <item value="A flat file compiler called" />
      <item value="directory includes three folders used to create HTML pages:" />
      <item value="The `src/` directory includes three folders used to create HTML pages:" />
      <item value="part of this copying process, as they have their own steps." />
      <item value="Note that Sass files, JavaScript files, and images are *not* **part of this copying process, as they have their own steps.**" />
      <item value="Gulp will copy anything out of the `src/assets` folder as-is to the `assets` folder of your final project. Note that Sass files, JavaScript files, and images are *not* **part of this copying process, as they have their own steps.**" />
      <item value="Compilation" />
      <item value="Asset Copying" />
      <item value="Here's an overview of what the ZURB Template can do:" />
      <item value="Features" />
      <item value="in the release notes" />
      <item value="to incorporate any Sass changes found" />
      <item value="incorporate" />
      <item value="As a result, you must manually edit your `_settings.scss` file to incorporate any Sass changes found" />
      <item value="The `_settings.scss` and `app.scss` files are not changed when upgrading an existing project. As a result, you must manually edit your `_settings.scss` file to incorporate any Sass changes found [in the release notes](https://github.com/zurb/foundation-sites/releases)." />
      <item value="Add custom SCSS and css to new files in the `components` folder then import those files at the bottom of `app.scss`" />
      <item value="Change Sass variables in `_settings.scss`" />
      <item value="To override or add to the default styles of the ZURB Template, in your project's `src/assets/scss/` folder" />
      <item value="As you work on your project" />
    </histories>
  </component>
</application>