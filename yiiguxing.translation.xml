<application>
  <component name="AppStorage">
    <histories>
      <item value="opposite to text direction" />
      <item value="Flex direction to use" />
      <item value="Order number to apply." />
      <item value="Changes the source order of a flex child. Children with lower numbers appear first in the layout." />
      <item value="Vertically align a single column within a flex row. Apply this mixin to a flex column." />
      <item value="Vertical alignment to use. Can be `top`, `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment." />
      <item value="Horizontal alignment to use. Can be `left`, `right`, `center`, `justify`, or `spaced`. Or, set it to `null` (the default) to not set horizontal alignment." />
      <item value="Horizontally or vertically aligns the items within a flex container." />
      <item value="Enables flexbox by adding `display: flex` to the element." />
      <item value="Quickly disable/enable Responsive breakpoints for Vanilla Flex Helpers." />
      <item value="Default value for the count of source ordering`" />
      <item value="In general, all of the components work exactly the same. However, a few of them require slight changes to CSS classes used to work properly. Refer to the documentation for each to find out what's different." />
      <item value="Input group" />
      <item value="Besides the flex grid, these components have flexbox modes:" />
      <item value="Enabling Flexbox Mode" />
      <item value="The latest Chrome and Firefox" />
      <item value="Flexbox mode is only supported in these browsers:" />
      <item value="For browsers with cutting-edge support, some of Foundation's key components can be converted to flexbox." />
      <item value="This will convert the framework's components to RTL format." />
      <item value="If you're using the Sass version of Foundation, open your project's [settings file](sass.html#the-settings-file) (`settings.scss`) and change this variable in the Global section:" />
      <item value="If you use a CSS version of Foundation (the ones you can find on the [download page](http://foundation.zurb.com/sites/download)), you'll need to create a custom download that includes RTL CSS instead of LTR. Just select &quot;Right-to-left&quot; under the Text Direction section of the customizer." />
      <item value="View of a [full list of language codes](http://www.loc.gov/standards/iso639-2/php/code_list.php) on the website of the Library of Congress." />
      <item value="View of a" />
      <item value="Yiddish :" />
      <item value="Urdu :" />
      <item value="Hebrew :" />
      <item value="Farsi :" />
      <item value="Chinese :" />
      <item value="Arabic :" />
      <item value="Arabic" />
      <item value="You'll need to change your lang attribute value to match your language. Here's a handy list of common right-to-left languages and their html codes." />
      <item value="Language Code" />
      <item value="This example is for a right-to-left Arabic layout" />
      <item value="You'll need to make a few changes to your markup to get the Javascript components working nice and smooth. In the `&lt;html&gt;` tag, you'll need to add a `dir` attribute with a value of `rtl`. Here's what your `&lt;html&gt;` tag should look like:" />
      <item value="Foundation can easily adapt its components to work with languages that read from right to left." />
      <item value="adapt" />
      <item value="Global tolerance for color pick contrast." />
      <item value="Internal variables used for text direction" />
      <item value="button cursor's value, `auto` by default" />
      <item value="Enabled responsive breakpoints for prototypes if applicable" />
      <item value="Enables flexbox for components that support it." />
      <item value="Sets the text direction of the CSS. Can be either `ltr` or `rtl`." />
      <item value="Global value used for all menu styles. Nested margin for submenu." />
      <item value="Global value used for all menu styles. Can be overwritten at individual menu component level." />
      <item value="Global value used for all elements that have a border radius." />
      <item value="Global font weight used for bold type." />
      <item value="Global font weight used for normal type." />
      <item value="Global value used for margin on components." />
      <item value="Set to `true` to enable antialiased type, using the `-webkit-font-smoothing` and `-moz-osx-font-smoothing` CSS properties." />
      <item value="Color used for light gray UI items." />
    </histories>
  </component>
</application>